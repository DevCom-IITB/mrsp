# Generated by Django 3.2.5 on 2021-08-01 19:36

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WaitlistApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128)),
                ('roll_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(default='', max_length=128)),
                ('phone_number', models.CharField(default='', max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a 10-digit number without the country code, e.g., 9876543210.', regex='^[0-9]{10}$')])),
                ('department', models.CharField(default='', help_text="Example: 'Electrical Engineering'", max_length=128)),
                ('permanent_address', models.TextField(default='')),
                ('fellowship', models.CharField(choices=[('Institute', 'Institute'), ('CSIR', 'CSIR'), ('UGC', 'UGC')], default='', help_text='Select one.', max_length=15)),
                ('fellowship_date', models.DateField(null=True, verbose_name='Date from which fellowship is awarded')),
                ('course_work_completes_on', models.DateField(help_text='Enter the expected date.', null=True)),
                ('spouse_name', models.CharField(default='', max_length=128)),
                ('spouse_roll_number', models.CharField(blank=True, default='', help_text='Leave blank if inapplicable', max_length=128, null=True)),
                ('spouse_designation', models.CharField(blank=True, default='', help_text='Leave blank if inapplicable', max_length=128, null=True)),
                ('marriage_certificate', models.FileField(default='', help_text='PDF only', upload_to='marriage_certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('photograph', models.FileField(default='', help_text='PDF only', upload_to='photographs', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Joint photograph with spouse')),
                ('grade_sheet', models.FileField(default='', help_text='PDF only', upload_to='grade_sheets', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Coursework grade-sheet')),
                ('recommendation', models.FileField(default='', help_text='PDF only', upload_to='recommendations', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Recommendation from the guide for accommodation')),
                ('waitlist_t1', models.IntegerField(default=-1, verbose_name='Waitlist Number (Type 1)')),
                ('waitlist_mt', models.IntegerField(default=-1, verbose_name='Waitlist Number (Manas-Tulsi)')),
                ('acad_verified', models.BooleanField(default=False)),
                ('marriage_certificate_verified', models.BooleanField(choices=[(True, 'Verified'), (False, 'Not verified')], default=False, verbose_name='Marriage Certificate')),
                ('photograph_verified', models.BooleanField(choices=[(True, 'Verified'), (False, 'Not verified')], default=False, verbose_name='Photograph')),
                ('grade_sheet_verified', models.BooleanField(choices=[(True, 'Verified'), (False, 'Not verified')], default=False, verbose_name='Grade sheet')),
                ('recommendation_verified', models.BooleanField(choices=[(True, 'Verified'), (False, 'Not verified')], default=False, verbose_name='Recommendations from the guide for accommodation')),
                ('acad_feedback', models.TextField(blank=True, default='', help_text='In case any information provided is invalid.', null=True, verbose_name='Feedback')),
                ('hcu_feedback', models.TextField(blank=True, default='', help_text='In case any information provided is invalid.', null=True, verbose_name='Feedback')),
                ('offer', models.IntegerField(choices=[(0, 'None'), (1, 'Type 1'), (2, 'Manas'), (3, 'Tulsi')], default=0, verbose_name='Shortlisting for')),
                ('occupying', models.IntegerField(choices=[(0, 'None'), (1, 'Type 1'), (2, 'Manas'), (3, 'Tulsi')], default=0)),
                ('vacated', models.IntegerField(choices=[(0, 'None'), (1, 'Type 1'), (2, 'Manas'), (3, 'Tulsi')], default=0)),
                ('offered_on', models.DateField(null=True)),
                ('occupied_on', models.DateField(null=True)),
                ('vacated_on', models.DateField(null=True)),
                ('form_updated', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
